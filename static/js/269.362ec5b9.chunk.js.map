{"version":3,"file":"static/js/269.362ec5b9.chunk.js","mappings":"mTASMA,GAAYC,EAAAA,EAAAA,IAAgBC,KAiElC,EA5DwB,WACpB,IAAAC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAkCxB,OAhCAG,EAAAA,EAAAA,YAAU,WACNC,MAAMC,GACDC,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACE,GAAI,OAAKV,EAAYU,EAAK,IAChCC,OAAM,SAACC,GAAK,OAAKC,QAAQD,MAAM,2BAA4BA,EAAM,IAEtEN,MAZQ,4HAaHE,MAAK,SAACC,GACH,IAAKA,EAASK,GACV,MAAM,IAAIC,MAAM,uBAADC,OAAwBP,EAASQ,SAEpD,OAAOR,EAASC,MACpB,IACCF,MAAK,SAACU,GACH,IAAMC,EAAWC,IAAAA,MAAWF,GAItBG,EAHO,IAAID,IAAAA,WAAeD,GACRG,oBAAoB,UAEZC,KAAI,SAACC,GACjC,IAAMC,EAAQ,IAAIL,IAAAA,OAAWI,GAC7B,MAAO,CACHE,MAAOD,EAAME,UAAUC,WACvBC,IAAKJ,EAAMK,QAAQF,WACnBG,MAAON,EAAMO,QAErB,IAEA5B,EAAUiB,EACd,IACCV,OAAM,SAACC,GAAK,OAAKC,QAAQD,MAAM,uBAAwBA,EAAM,GACtE,GAAG,KAGCqB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CAAAF,SAAEnC,KAChBoC,EAAAA,EAAAA,KAACE,EAAAA,EAAQ,CACL7C,UAAWA,EACXW,OAAQA,EACRmC,cAAc,QACdC,YAAY,SAGhBN,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,MAAAD,SACK/B,EAAOoB,KAAI,SAACE,EAAOe,GAAK,OACrBP,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACKxC,IAAO+B,EAAMC,OAAOe,OAAO,iBAAiB,MAAIhB,EAAMM,QADlDS,EAEJ,WAM7B,C","sources":["KalenderContent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport moment from 'moment';\nimport ICAL from 'ical.js';\n\nimport kalenderText from './text/Kalender.md';\n\nconst localizer = momentLocalizer(moment);\n// const iCalURL = 'webcall://p70-caldav.icloud.com/published/2/MTIxMDMwNDg2OTEyMTAzMMka9_w2YR-dYArxhpu_Oh2BBpQz2Olge1VSWQpXzmhduN2LFLjB9Awr5a0ncL3CFtTK3Ag9cBSRXc1wyzYjveU';\n\nconst iCalURL = \"https://calendar.google.com/calendar/ical/rjm3uekajfq7nqqsm18unbcl1cu2au08%40import.calendar.google.com/public/basic.ics\"\n\nconst KalenderContent = () => {\n    const [markdown, setMarkdown] = useState('');\n    const [events, setEvents] = useState([]);\n\n    useEffect(() => {\n        fetch(kalenderText)\n            .then((response) => response.text())\n            .then((text) => setMarkdown(text))\n            .catch((error) => console.error('Error fetching markdown:', error));\n\n        fetch(iCalURL)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.text();\n            })\n            .then((data) => {\n                const jcalData = ICAL.parse(data);\n                const comp = new ICAL.Component(jcalData);\n                const icalEvents = comp.getAllSubcomponents('vevent');\n                \n                const parsedEvents = icalEvents.map((eventItem) => {\n                    const event = new ICAL.Event(eventItem);\n                    return {\n                        start: event.startDate.toJSDate(),\n                        end: event.endDate.toJSDate(),\n                        title: event.summary\n                    };\n                });\n        \n                setEvents(parsedEvents);\n            })\n            .catch((error) => console.error('Error fetching iCal:', error));\n    }, []);\n\n    return (\n        <div>\n            <ReactMarkdown>{markdown}</ReactMarkdown>\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n            />\n            {/* <iframe src=\"https://calendar.google.com/calendar/embed?src=rjm3uekajfq7nqqsm18unbcl1cu2au08%40import.calendar.google.com&ctz=Europe%2FBerlin\" style=\"border: 0\" width=\"800\" height=\"600\" frameborder=\"0\" scrolling=\"no\"></iframe> */}\n            <div>\n                <h2>Tour Dates</h2>\n                <ul>\n                    {events.map((event, index) => (\n                        <li key={index}>\n                            {moment(event.start).format('MMMM DD, YYYY')} - {event.title}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default KalenderContent;\n"],"names":["localizer","momentLocalizer","moment","_useState","useState","_useState2","_slicedToArray","markdown","setMarkdown","_useState3","_useState4","events","setEvents","useEffect","fetch","kalenderText","then","response","text","catch","error","console","ok","Error","concat","status","data","jcalData","ICAL","parsedEvents","getAllSubcomponents","map","eventItem","event","start","startDate","toJSDate","end","endDate","title","summary","_jsxs","children","_jsx","ReactMarkdown","Calendar","startAccessor","endAccessor","index","format"],"sourceRoot":""}