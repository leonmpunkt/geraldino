{"version":3,"file":"static/js/269.121a4470.chunk.js","mappings":"mTAWMA,GAAYC,EAAAA,EAAAA,IAAgBC,KA8ClC,EA3CwB,WACpB,IAAAC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GA4BxB,OA1BAG,EAAAA,EAAAA,YAAU,WACNC,MAAMC,GACDC,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACE,GAAI,OAAKV,EAAYU,EAAK,IAChCC,OAAM,SAACC,GAAK,OAAKC,QAAQD,MAAM,2BAA4BA,EAAM,IAElEN,MAZI,yJAaHE,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACM,GACH,IAAMC,EAAWC,IAAAA,MAAWF,GAItBG,EAHO,IAAID,IAAAA,WAAeD,GACRG,oBAAoB,UAEZC,KAAI,SAACC,GACjC,IAAMC,EAAQ,IAAIL,IAAAA,OAAWI,GAC7B,MAAO,CACHE,MAAOD,EAAME,UAAUC,WACvBC,IAAKJ,EAAMK,QAAQF,WACnBG,MAAON,EAAMO,QAErB,IAEAxB,EAAUa,EACd,GACR,GAAG,KAGCY,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CAAAF,SAAE/B,KAChBgC,EAAAA,EAAAA,KAACE,EAAAA,EAAQ,CACLzC,UAAWA,EACXW,OAAQA,EACR+B,cAAc,QACdC,YAAY,UAI5B,C","sources":["KalenderContent.js"],"sourcesContent":["// KalenderContent.js\n\nimport React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport moment from 'moment';\nimport ICAL from 'ical.js';\n\nimport kalenderText from './text/Kalender.md';\n\nconst localizer = momentLocalizer(moment);\nconst iCalURL = 'https://p70-caldav.icloud.com/published/2/MTIxMDMwNDg2OTEyMTAzMMka9_w2YR-dYArxhpu_Oh2BBpQz2Olge1VSWQpXzmhduN2LFLjB9Awr5a0ncL3CFtTK3Ag9cBSRXc1wyzYjveU';\n\nconst KalenderContent = () => {\n    const [markdown, setMarkdown] = useState('');\n    const [events, setEvents] = useState([]);\n\n    useEffect(() => {\n        fetch(kalenderText)\n            .then((response) => response.text())\n            .then((text) => setMarkdown(text))\n            .catch((error) => console.error('Error fetching markdown:', error));\n\n            fetch(iCalURL)\n            .then((response) => response.text())\n            .then((data) => {\n                const jcalData = ICAL.parse(data);\n                const comp = new ICAL.Component(jcalData);\n                const icalEvents = comp.getAllSubcomponents('vevent');\n                \n                const parsedEvents = icalEvents.map((eventItem) => {\n                    const event = new ICAL.Event(eventItem);\n                    return {\n                        start: event.startDate.toJSDate(),\n                        end: event.endDate.toJSDate(),\n                        title: event.summary\n                    };\n                });\n        \n                setEvents(parsedEvents);\n            });\n    }, []);\n\n    return (\n        <div>\n            <ReactMarkdown>{markdown}</ReactMarkdown>\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n            />\n        </div>\n    );\n};\n\nexport default KalenderContent;\n"],"names":["localizer","momentLocalizer","moment","_useState","useState","_useState2","_slicedToArray","markdown","setMarkdown","_useState3","_useState4","events","setEvents","useEffect","fetch","kalenderText","then","response","text","catch","error","console","data","jcalData","ICAL","parsedEvents","getAllSubcomponents","map","eventItem","event","start","startDate","toJSDate","end","endDate","title","summary","_jsxs","children","_jsx","ReactMarkdown","Calendar","startAccessor","endAccessor"],"sourceRoot":""}