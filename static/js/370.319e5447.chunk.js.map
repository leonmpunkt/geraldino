{"version":3,"file":"static/js/370.319e5447.chunk.js","mappings":"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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/devlop/lib/default.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/hast-util-whitespace/lib/index.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/hast-util-to-jsx-runtime/lib/index.js","../node_modules/html-url-attributes/lib/index.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-util-encode/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/lib/index.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/remark-rehype/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/callable-instance.js","../node_modules/unified/lib/index.js","../node_modules/react-markdown/lib/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","export function deprecate(fn) {\n  return fn\n}\n\nexport function equal() {}\n\nexport function ok() {}\n\nexport function unreachable() {}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  try {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n  } catch (e) {\n    return typeof fn === \"function\";\n  }\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   An element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   An element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | undefined, [prop: string]: Array<Child> | Child | Element | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element' || node.type === 'root') {\n    const parentSchema = state.schema\n    let schema = parentSchema\n\n    if (\n      node.type === 'element' &&\n      node.tagName.toLowerCase() === 'svg' &&\n      parentSchema.space === 'html'\n    ) {\n      schema = svg\n      state.schema = schema\n    }\n\n    state.ancestors.push(node)\n\n    let children = createChildren(state, node)\n    const props = createProperties(state, state.ancestors)\n    let type = state.Fragment\n\n    state.ancestors.pop()\n\n    if (node.type === 'element') {\n      if (children && tableElements.has(node.tagName)) {\n        children = children.filter(function (child) {\n          return typeof child === 'string' ? !whitespace(child) : true\n        })\n      }\n\n      if (own.call(state.components, node.tagName)) {\n        const key = /** @type {keyof JSX.IntrinsicElements} */ (node.tagName)\n        type = state.components[key]\n\n        // If this is swapped out for a component:\n        if (\n          typeof type !== 'string' &&\n          type !== state.Fragment &&\n          state.passNode\n        ) {\n          props.node = node\n        }\n      } else {\n        type = node.tagName\n      }\n    }\n\n    if (children.length > 0) {\n      const value = children.length > 1 ? children : children[0]\n\n      if (value) {\n        props.children = value\n      }\n    }\n\n    // Restore parent schema.\n    state.schema = parentSchema\n\n    return state.create(node, type, props, key)\n  }\n\n  if (node.type === 'text') {\n    return node.value\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByTagName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys && child.type === 'element') {\n      const count = countsByTagName.get(child.tagName) || 0\n      key = child.tagName + '-' + count\n      countsByTagName.set(child.tagName, count + 1)\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle properties.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Array<Parents>} ancestors\n *   Stack of parents.\n * @returns {Props}\n *   Props for runtime.\n */\nfunction createProperties(state, ancestors) {\n  const node = ancestors[ancestors.length - 1]\n  /** @type {Props} */\n  const props = {}\n  /** @type {string} */\n  let prop\n\n  if ('properties' in node && node.properties) {\n    /** @type {string | undefined} */\n    let alignValue\n\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          state,\n          ancestors,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          const [key, value] = result\n\n          if (\n            state.tableCellAlignToStyle &&\n            key === 'align' &&\n            typeof value === 'string' &&\n            tableCellElement.has(node.tagName)\n          ) {\n            alignValue = value\n          } else {\n            props[key] = value\n          }\n        }\n      }\n    }\n\n    if (alignValue) {\n      // Assume style is an object.\n      const style = /** @type {Style} */ (props.style || (props.style = {}))\n      style[\n        state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'\n      ] = alignValue\n    }\n  }\n\n  return props\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Array<Parents>} ancestors\n *   Stack of parents.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, ancestors, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object'\n        ? value\n        : parseStyle(state, ancestors, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Array<Nodes>} ancestors\n *   Stack of nodes.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, ancestors, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors,\n        cause,\n        source: 'hast-util-to-jsx-runtime',\n        ruleId: 'style'\n      })\n      message.file = state.filePath || undefined\n      message.url =\n        'https://github.com/syntax-tree/hast-util-to-jsx-runtime#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n *   Value to encode.\n * @returns {string}\n *   Encoded value.\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > 126 && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55_295 && code < 57_344) ||\n    // Noncharacters.\n    (code > 64_975 && code < 65_008) /* eslint-disable no-bitwise */ ||\n    (code & 65_535) === 65_535 ||\n    (code & 65_535) === 65_534 /* eslint-enable no-bitwise */ ||\n    // Out of range\n    code > 1_114_111\n  ) {\n    return '\\uFFFD'\n  }\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (toHast(tree, options))\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (toHast(tree, options || destination))\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (own.call(urlAttributes, key) && own.call(node.properties, key)) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  return sanitizeUri(value, safeProtocol)\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","parse","require","StyleToObject","iterator","output","hasIterator","len","_assertThisInitialized","self","ReferenceError","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","F","s","n","done","e","_e","f","normalCompletion","didErr","step","next","_e2","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","getPrototypeOf","NewTarget","Reflect","construct","apply","assertThisInitialized","_defineProperty","_getPrototypeOf","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_isNativeReflectConstruct","sham","Proxy","Boolean","valueOf","_iterableToArray","iter","from","ownKeys","r","t","keys","getOwnPropertySymbols","filter","_objectSpread2","forEach","getOwnPropertyDescriptors","defineProperties","_setPrototypeOf","p","_toConsumableArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","_toPropertyKey","arg","input","hint","prim","toPrimitive","undefined","res","String","Number","_typeof","env","globalThis","deserialize","serialized","$","_","as","out","index","set","unpair","has","get","_$index","_slicedToArray","_step","_iterator","_step2","object","_iterator2","_step2$value","Date","flags","RegExp","_step3","map","Map","_iterator3","_step3$value","_step4","Set","_iterator4","add","message","BigInt","deserializer","EMPTY","typeOf","asString","includes","shouldSkip","_ref2","_ref3","TYPE","serialize","_ref4","json","lossy","strict","pair","_typeOf","_typeOf2","entry","toJSON","entries","toISOString","serializer","structuredClone","any","tokens","indexOf","token","stringify","values","settings","concat","join","padRight","padLeft","ok","unreachable","Schema","normal","space","merge","definitions","assign","own","definition","properties","info","DefinedInfo","transform","attributes","mustUseProperty","normalize","attribute","xlink","toLowerCase","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","number","ariaColIndex","ariaColSpan","ariaControls","spaceSeparated","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","commaSeparated","acceptCharset","accessKey","action","allow","allowFullScreen","boolean","allowPaymentRequest","allowUserMedia","alt","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","overloadedBoolean","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","title","translate","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","commaOrSpaceSeparated","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","find","schema","Type","Info","test","rest","camelcase","toUpperCase","dashes","kebab","$0","checks","types","_Info","_super","_this","mark","check","defined","powers","increment","Math","pow","empty","hastToReact","_construct","Parent","args","Class","a","Function","_wrapNativeSuper","_cache","fn","Wrapper","stringifyPosition","point","VFileMessage","_Error","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","_objectSpread","cause","ruleId","parent","fatal","file","stack","actual","expected","note","url","emptyMap","dashSomething","tableElements","tableCellElement","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","isStaticChildren","children","pointStart","columnNumber","fileName","lineNumber","developmentCreate","jsx","jsxs","productionCreate","state","components","elementAttributeNameCase","ignoreInvalidStyle","passKeys","passNode","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","tagName","countsByTagName","child","count","createChildren","alignValue","createProperty","_result","createProperties","pop","thing","isNaN","commas","spaces","styleObject","styleToObject","replacer","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","toDash","$1","urlAttributes","icon","unicodePunctuationInternal","regexCheck","asciiAlpha","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodeWhitespace","regex","fromCharCode","characterReferences","sanitizeUri","protocol","encode","normalizeUri","colon","questionMark","numberSign","slash","skip","charCodeAt","encodeURIComponent","emptyOptions","includeImageAlt","includeHtml","all","splice","remove","items","parameters","chunkStart","unshift","subtokenize","events","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","stream","previous","context","startPosition","startPositions","tokenizer","parser","childEvents","gaps","current","adjust","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","write","syntaxExtension","extension","hook","left","right","constructs","existing","before","factorySpace","effects","limit","POSITIVE_INFINITY","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","document","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","eof","seen","nok","disable","null","blankLine","after","partial","chunkInside","contentEnd","continuationConstruct","contentContinue","resolve","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","view","startIndex","startBufferIndex","endIndex","endBufferIndex","head","shift","sliceChunks","_point","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","element","createElement","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","unicodePunctuation","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","_document","_flowInitial","_flow","_string","_text","resolveText","extensions","combineExtensions","defaultConstructs","search","decodeNumericCharacterReference","base","parseInt","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","lastIndex","ceil","preprocess","combined","_combined$key","_combined$key2","remarkParse","doc","_regeneratorRuntime","asyncIterator","u","toStringTag","define","Generator","Context","makeInvokeMethod","tryCatch","h","l","GeneratorFunction","GeneratorFunctionPrototype","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","then","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","awrap","Promise","reverse","prev","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","revert","subtype","suffix","contents","listItemLoose","tab","trimLines","last","trimLine","handlers","blockquote","patch","applyData","break","delete","footnoteReference","counter","clobberPrefix","safeId","footnoteOrder","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","root","table","firstRow","tableContent","body","pointEnd","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","defaultHandlers","passThrough","shallow","_excluded","unknownHandler","visit","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","_tail$children","tailTail","dataFootnotes","footer","assert","remarkRehype","destination","_ref","_callee","hastTree","_context","run","_x","_x2","_toArray","arrayWithHoles","nonIterableRest","bail","trough","fns","pipeline","_len","_key","middlewareIndex","callback","_len2","_key2","middleware","wrapped","_len3","_key3","fnExpectsCallback","_len4","_key4","middelware","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","JSON","proc","cwd","isUrl","fileUrlOrPath","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","part","CallableInstance","proto","func","names","getOwnPropertyNames","Processor","_CallableInstance","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","_this$attachers$this$","transformer","freeze","realFile","vfile","assertParser","assertCompiler","executor","parseTree","realDone","compileTree","compileResult","process","assertDone","assertNode","outputTree","resultingTree","addPlugin","addList","addPreset","_value","plugins","plugin","entryIndex","_parameters2","primary","currentPrimary","isPlainObj","unified","asyncName","looksLikeAVFile","changelog","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","runSync","_parent$children","split","convert","castFactory","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","tests","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","factory","parents","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse"],"sourceRoot":""}