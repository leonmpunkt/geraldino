{"version":3,"file":"static/js/876.426844e3.chunk.js","mappings":"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","sources":["../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hastscript/lib/create-h.js","../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hastscript/lib/index.js","../node_modules/vfile-location/lib/index.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-from-parse5/lib/index.js","../node_modules/zwitch/index.js","../node_modules/hast-util-to-parse5/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/unicode.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/error-codes.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tokenizer/preprocessor.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/token.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","../node_modules/hast-util-raw/node_modules/parse5/dist/common/html.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tokenizer/index.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/formatting-element-list.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/open-element-stack.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tree-adapters/default.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/doctype.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/foreign-content.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/index.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","../node_modules/hast-util-raw/node_modules/parse5/dist/serializer/index.js","../node_modules/hast-util-raw/lib/index.js","../node_modules/rehype-raw/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n *\n *   Returns `undefined` when given out of bounds input.\n *\n *   Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n *   [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {UnistPoint | undefined}\n *   Point, if `offset` is valid and in-bounds input.\n *\n * @callback ToOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n * @param {PointLike | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number | undefined}\n *   Offset (`number`) or `undefined` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n * @property {ToOffset} toOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n */\n\nconst search = /\\r?\\n|\\r/g\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  search.lastIndex = 0\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map",null,null,null,null,"/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map",null,"import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {Array<Nodes['type']> | null | undefined} [passThrough]\n *   List of custom hast node types to pass through (as in, keep) (optional).\n *\n *   If the passed through nodes have children, those children are expected to\n *   be hast again and will be handled.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n *\n * @typedef {{type: 'comment', value: {stitch: Nodes}}} Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && node.tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n  // Always element.\n  /* c8 ignore next */\n  const attrs = 'attrs' in result ? result.attrs : []\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs,\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = node.tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(node.tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tag.tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n"],"names":["search","buttonTypes","Set","own","hasOwnProperty","createH","schema","defaultTagName","caseSensitive","adjust","values","result","index","length","toLowerCase","createAdjustMap","selector","properties","node","_len","arguments","children","Array","_key","undefined","type","child","unshift","key","previous","tagName","value","props","start","lastIndex","match","exec","subvalue","slice","id","isArray","className","push","parseSelector","call","name","has","isProperties","addProperty","addChild","content","info","find","Number","isNaN","spaceSeparated","spaces","commaSeparated","commas","commaOrSpaceSeparated","join","parsePrimitive","property","concat","style","String","finalResult","nodes","Error","number","boolean","overloadedBoolean","normalize","h","html","s","svg","webNamespaces","mathml","xlink","xml","xmlns","proto","Object","prototype","fromParse5","tree","options","settings","one","file","location","space","verbose","state","nodeName","patch","data","reference","quirksMode","mode","all","childNodes","doc","loc","indices","test","toPoint","offset","line","column","toOffset","point","end","assert","position","namespaceURI","attrs","attribute","prefix","fn","pos","sourceCodeLocation","startTag","endTag","element","results","from","to","tail","assign","opening","closing","createLocation","startLine","startCol","startOffset","endLine","endCol","endOffset","zwitch","invalid","handlers","unknown","_fn","parameters","apply","this","emptyOptions","root","parentSchema","currentSchema","prop","createProperty","parentNode","fragment","text","comment","doctype","publicId","systemId","indexOf","namespace","CODE_POINTS","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","ERR","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","TokenType","Preprocessor","handler","_classCallCheck","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","_createClass","get","code","col","onParseError","getError","nextCp","charCodeAt","isSurrogatePair","_addGap","$","EOF","_err","surrogateInInputStream","willDropParsedChunk","substring","chunk","isLastChunk","pattern","startsWith","i","CARRIAGE_RETURN","LINE_FEED","advance","_processSurrogate","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","count","pop","getTokenAttr","token","attrName","CharCodes","Uint16Array","split","map","c","decodeMap","Map","fromCodePoint","_a","codePoint","output","fromCharCode","replaceCodePoint","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isEntityInAttributeInvalidEnd","EQUALS","UPPER_A","UPPER_Z","LOWER_A","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","str","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","base","digitCount","Math","pow","parseInt","substr","startIdx","char","UPPER_F","LOWER_F","addToNumericResult","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","startEntity","len","write","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecodeTree","xmlDecodeTree","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","_SPECIAL_ELEMENTS","_defineProperty","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","State","C1_CONTROLS_REFERENCE_REPLACEMENTS","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","EntryType","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","returnState","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","sourceCodeLocationInfo","_consume","_ensureHibernation","_callState","writeCallback","_runParsingLoop","insertHtmlAtCurrentPos","_unconsume","retreat","_advanceBy","START_TAG","tagID","selfClosing","ackSelfClosing","END_TAG","COMMENT","initialName","DOCTYPE","forceQuirks","chars","attrNameFirstCh","create","_leaveAttrValue","duplicateAttribute","ct","_emitCurrentCharacterToken","prepareToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","dropParsedChunk","onComment","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","onEof","ch","_createCharacterToken","NULL","_appendCharToCurrentCharacterToken","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","peek","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_emitCodePoint","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","_emitEOFToken","_emitChars","_createStartTagToken","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","_createCommentToken","eofBeforeTagName","invalidFirstCharacterOfTagName","_createEndTagToken","missingEndTagName","emitCurrentTagToken","eofInTag","_cp","handleSpecialEndTag","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","unexpectedEqualsSignBeforeAttributeName","_createAttr","_leaveAttrName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","emitCurrentComment","_consumeSequenceIfMatch","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","_createDoctypeToken","emitCurrentDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","_flushCodePointConsumedAsCharacterReference","_reconsumeInState","matchResult","_matchNamedCharacterReference","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","replacement","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","_toConsumableArray","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","document","treeAdapter","items","tagIDs","stackTop","tmplCount","currentTagId","_isInTemplate","getTemplateContent","lastIndexOf","getNamespaceURI","onItemPush","popped","_updateCurrentElement","onItemPop","oldElement","newElement","idx","_indexOf","referenceElement","newElementID","insertionIdx","splice","targetIdx","shortenToLength","tagNames","targetNS","_indexOfTagNames","popUntilPopped","includes","clearBackTo","elementIdx","ns","exclusionId","MARKER","Marker","FormattingElementList","entries","bookmark","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","entry","elementAttrs","getAttrList","_getNoahArkConditionCandidates","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","_ensureNoahArkCondition","Element","bookmarkIdx","entryIndex","markerIdx","_this","createTextNode","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createElement","createCommentNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","_objectSpread","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","some","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","InsertionMode","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","Parser","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","rootElement","_adoptNodes","beforeToken","err","tid","isTop","_setEndLocation","_this$openElements","isHTML","_isIntegrationPoint","nextTokenizerState","_insertElement","TEXT","IN_BODY","TN","docTypeNode","_shouldFosterParentOnInsertion","_fosterParentElement","parent","currentTmplContentOrNode","_attachElementToTree","tmpl","beforeElement","_this$_findFosterPare","_findFosterParentingLocation","siblings","textNodeIdx","_token$location","donor","closingToken","ctLoc","endLoc","_this$openElements2","_processStartTag","foreignContent","_this2","listLength","endIndex","findIndex","contains","generateImpliedEndTags","popUntilTableCellPopped","clearToLastMarker","IN_ROW","generateImpliedEndTagsWithExclusion","popUntilTagNamePopped","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","p","_insertCharacters","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","IN_TEMPLATE","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","unicode","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","_appendCommentNode","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","_setDocumentType","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","shouldProcessStartTagTokenInForeignContent","startTagToken","_ref","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","_getAdjustedCurrentElement","currentNs","adjustedTagName","_appendElement","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","remove","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","hasInTableScope","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","_closeTableCell","startTagInCell","startTagInSelect","_resetInsertionMode","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","isRootHtmlElementCurrent","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","parser","opts","documentMock","_initTokenizerForFragmentParsing","_insertFakeRootElement","_findFormInFragmentContext","aaObtainFormattingElementEntry","formattingElementEntry","getElementEntryInScopeWithTagName","hasInScope","removeEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","_isSpecialElement","aaInnerLoop","formattingElement","lastElement","nextElement","getCommonAncestor","elementEntry","getElementEntry","counterOverflow","aaRecreateElementFromEntry","replace","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","insertElementAfterBookmark","insertAfter","callAdoptionAgency","target","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","_processToken","_insertFakeElement","_switchToTextParsing","_insertTemplate","insertMarker","generateImpliedEndTagsThoroughly","closingOfElementWithOpenChildElements","shift","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","_reconstructActiveFormattingElements","areaStartTagInBody","isHiddenInput","inputType","TYPE","noembedStartTagInBody","genericStartTagInBody","pushElement","bStartTagInBody","activeElementEntry","aStartTagInBody","hasInButtonScope","_closePElement","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","tryPeekProperlyNestedBodyElement","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","popAllUpToHtmlElement","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","hasInListItemScope","liEndTagInBody","ddEndTagInBody","hasNumberedHeaderInScope","popUntilNumberedHeaderPopped","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","clearBackToTableContext","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","clearBackToTableBodyContext","hasTableBodyContextInTableScope","clearBackToTableRowContext","hasInSelectScope","xmlCodeMap","codePointAt","getEscaper","regex","lastIdx","knownMdxNames","parseOptions","raw","head","Boolean","documentMode","handleRaw","getFragmentParser","handle","stitches","resetTokenizer","pointStart","getFragment","visit","stitch","toParse5","tag","Token","createParse5Location","pointEnd","clone","structuredClone","cloneWithoutChildren","fakeRoot","setPoint","node_","passThrough","extra","rehypeRaw"],"sourceRoot":""}